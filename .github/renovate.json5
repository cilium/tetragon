{
  username: 'cilium-renovate[bot]',
  repositories: [
    'cilium/tetragon',
  ],
  requireConfig: 'ignored',
  allowedPostUpgradeCommands: [
    '^/tmp/install-buildx$',
    '^make protogen$',
    '^make crds$',
    '^make vendor$',
    '^make -C install/kubernetes$',
    '^go mod vendor$',
    "^install-tool golang \\$\\(grep -oP '\\^go \\\\K\\.\\+' go\\.mod\\)$",
    "^install-tool golang \\$\\(grep -oP '\\^toolchain go\\\\K\\.\\+' go\\.mod\\)$",
    '^make metrics-docs$',
  ],
  $schema: 'https://docs.renovatebot.com/renovate-schema.json',
  extends: [
    'config:recommended',
    ':gitSignOff',
    'helpers:pinGitHubActionDigests',
  ],
  gitAuthor: 'cilium-renovate[bot] <134692979+cilium-renovate[bot]@users.noreply.github.com>',
  includePaths: [
    '.github/renovate.json5',
    '.github/workflows/**',
    'go.mod',
    'go.sum',
    'api/go.mod',
    'api/go.sum',
    'pkg/k8s/go.mod',
    'pkg/k8s/go.sum',
    'contrib/tetragon-rthooks/go.mod',
    'contrib/tetragon-rthooks/go.sum',
    '*Dockerfile*',
    'docs/hugo.toml',
    'install/kubernetes/*/Chart.yaml',
    'install/kubernetes/*/Chart.lock',
    'install/kubernetes/*/values.yaml',
    '**/*Makefile*',
    'contrib/update-helm-chart.sh',
  ],
  postUpdateOptions: [
    'gomodTidy',
  ],
  rebaseWhen: 'conflicted',
  pinDigests: true,
  separateMajorMinor: true,
  separateMultipleMajor: true,
  separateMinorPatch: true,
  pruneStaleBranches: true,
  baseBranches: [
    'main',
    'v1.0',
    'v1.1',
    'v1.2',
  ],
  vulnerabilityAlerts: {
    enabled: true,
  },
  osvVulnerabilityAlerts: true,
  labels: [
    'release-blocker',
    'release-note/dependency',
  ],
  schedule: [
    'on monday and friday',
  ],
  prHourlyLimit: 2,
  packageRules: [
    {
      matchPackageNames: [
        'go',
        'docker.io/library/{/,}**',
        'github.com/golang/{/,}**',
        'golang.org/x/{/,}**',
        'google.golang.org/{/,}**',
        'github.com/google/{/,}**',
        'k8s.io/{/,}**',
        'sigs.k8s.io/{/,}**',
        'quay.io/lvh-images/kernel-images{/,}**',
      ],
      matchUpdateTypes: [
        'patch',
        'pin',
        'pinDigest',
      ],
      automerge: true,
    },
    {
      groupName: 'all github action dependencies',
      groupSlug: 'all-github-action',
      matchFileNames: [
        '.github/workflows/**',
      ],
      matchManagers: [
        'github-actions',
      ],
      matchUpdateTypes: [
        'major',
        'minor',
        'patch',
        'digest',
        'pin',
        'pinDigest',
      ],
      schedule: [
        'every month',
      ],
    },
    {
      matchFileNames: [
        '.github/workflows/**',
      ],
      matchManagers: [
        'github-actions',
      ],
      separateMinorPatch: false,
    },
    {
      groupName: 'all go dependencies main',
      groupSlug: 'all-go-deps-main',
      matchFileNames: [
        'go.mod',
        'go.sum',
      ],
      matchUpdateTypes: [
        'patch',
        'digest',
        'pin',
        'pinDigest',
      ],
      matchBaseBranches: [
        'main',
      ],
    },
    {
      groupName: 'all API go dependencies main',
      groupSlug: 'all-api-go-deps-main',
      matchFileNames: [
        'api/go.mod',
        'api/go.sum',
      ],
      matchUpdateTypes: [
        'major',
        'minor',
        'patch',
        'digest',
        'pin',
        'pinDigest',
      ],
      matchBaseBranches: [
        'main',
      ],
    },
    {
      groupName: 'all k8s pkg go dependencies main',
      groupSlug: 'all-k8s-pkg-go-deps-main',
      matchFileNames: [
        'pkg/k8s/go.mod',
        'pkg/k8s/go.sum',
      ],
      matchUpdateTypes: [
        'patch',
        'digest',
        'pin',
        'pinDigest',
      ],
      matchBaseBranches: [
        'main',
      ],
    },
    {
      groupName: 'all rthook go dependencies main',
      groupSlug: 'all-rthook-go-deps-main',
      matchFileNames: [
        'contrib/tetragon-rthooks/go.mod',
        'contrib/tetragon-rthooks/go.mod',
      ],
      matchUpdateTypes: [
        'patch',
        'digest',
        'pin',
        'pinDigest',
      ],
      matchBaseBranches: [
        'main',
      ],
    },
    {
      matchManagers: [
        'gomod',
      ],
      postUpdateOptions: [
        'gomodUpdateImportPaths',
      ],
      postUpgradeTasks: {
        commands: [
          '/tmp/install-buildx',
          'make protogen',
          'make crds',
          'make metrics-docs',
          'make vendor',
        ],
        fileFilters: [
          '**/**',
        ],
        executionMode: 'branch',
      },
    },
    {
      groupName: 'Go',
      matchPackageNames: [
        'go',
        'docker.io/library/golang',
      ],
    },
    {
      matchPackageNames: [
        'go',
        'docker.io/library/golang',
      ],
      matchBaseBranches: [
        'main',
      ],
      postUpgradeTasks: {
        commands: [
          "install-tool golang $(grep -oP '^toolchain go\\K.+' go.mod)",
          'make vendor',
        ],
        fileFilters: [
          '**/**',
        ],
        executionMode: 'branch',
      },
    },
    {
      matchPackageNames: [
        'go',
        'docker.io/library/golang',
      ],
      matchBaseBranches: [
        'v1.0',
        'v1.1',
        'v1.2',
      ],
      postUpgradeTasks: {
        commands: [
          "install-tool golang $(grep -oP '^go \\K.+' go.mod)",
          'make vendor',
        ],
        fileFilters: [
          '**/**',
        ],
        executionMode: 'branch',
      },
    },
    {
      groupName: 'golangci-lint',
      matchDepNames: [
        'golangci/golangci-lint',
      ],
    },
    {
      groupName: 'Helm chart',
      matchFileNames: [
        'install/kubernetes/tetragon/values.yaml',
        'install/kubernetes/Makefile',
      ],
      postUpgradeTasks: {
        commands: [
          'make -C install/kubernetes',
        ],
        fileFilters: [
          '**/**',
        ],
        executionMode: 'branch',
      },
    },
    {
      matchDepNames: [
        'quay.io/lvh-images/kernel-images',
        'quay.io/lvh-images/kind',
      ],
      versioning: 'regex:^((?<compatibility>[a-z0-9-]+)|((?<major>\\d+)\\.(?<minor>\\d+)))\\-(?<patch>\\d+)\\.(?<build>\\d+)(@(?<currentDigest>sha256:[a-f0-9]+))?$',
    },
    {
      groupName: 'all lvh-images main',
      groupSlug: 'all-lvh-images-main',
      matchPackageNames: [
        'quay.io/lvh-images/kernel-images',
        'quay.io/lvh-images/kind',
      ],
      matchUpdateTypes: [
        'digest',
        'patch',
        'pin',
        'pinDigest',
      ],
    },
    {
      enabled: false,
      matchBaseBranches: [
        'v1.0',
        'v1.1',
        'v1.2',
      ],
      matchPackageNames: [
        '*',
      ],
    },
    {
      enabled: true,
      matchPackageNames: [
        'docker.io/library/alpine',
      ],
      matchBaseBranches: [
        'v1.0',
        'v1.1',
        'v1.2',
      ],
    },
    {
      enabled: true,
      matchPackageNames: [
        'go',
        'docker.io/library/golang',
      ],
      allowedVersions: '/^1\\.21\\.[0-9]+-?(alpine)?$/',
      matchBaseBranches: [
        'v1.0',
      ],
    },
    {
      enabled: true,
      matchPackageNames: [
        'go',
        'docker.io/library/golang',
      ],
      allowedVersions: '/^1\\.22\\.[0-9]+-?(alpine)?$/',
      matchBaseBranches: [
        'v1.1',
        'v1.2',
      ],
    },
    {
      enabled: false,
      matchFileNames: [
        'go.mod',
        'api/go.mod',
        'pkg/k8s/go.mod',
        'contrib/tetragon-rthooks/go.mod',
      ],
      matchPackageNames: [
        'go',
      ],
      matchDatasources: [
        'golang-version',
      ],
      matchUpdateTypes: [
        'patch',
      ],
    },
    {
      enabled: false,
      matchPackageNames: [
        'quay.io/lvh-images/kernel-images',
        'quay.io/lvh-images/kind',
      ],
      matchUpdateTypes: [
        'major',
        'minor',
      ],
    },
    {
      matchPackageNames: [
        'github.com/cilium/tetragon/api',
        'github.com/cilium/tetragon/pkg/k8s',
        'github.com/cilium/tetragon',
      ],
      matchManagers: [
        'gomod',
      ],
      enabled: false,
    },
    {
      matchPackageNames: [
        'sigstore/cosign-installer',
      ],
      matchManagers: [
        'github-actions',
      ],
      enabled: false,
    },
    {
      matchPackageNames: [
        'docker.io/library/ubuntu',
      ],
      matchManagers: [
        'dockerfile',
      ],
      matchFileNames: [
        'Dockerfile.clang',
        'Dockerfile.clang-format',
      ],
      enabled: false,
    },
    {
      enabled: false,
      matchPackageNames: [
        'go.universe.tf/metallb',
        'github.com/cilium/metallb',
        'github.com/mdlayher/arp',
        'github.com/miekg/dns',
        'github.com/cilium/dns',
        'sigs.k8s.io/controller-tools',
        'github.com/cilium/controller-tools',
        'github.com/cilium/client-go',
      ],
    },
    {
      matchPackageNames: [
        'github.com/cilium/cilium',
      ],
      matchUpdateTypes: [
        'major',
        'minor',
      ],
      draftPR: true,
      prBodyNotes: [
        ':warning: Manual steps need to be performed (explaining why this PR is only a draft). First replace directives must be synchronized with cilium/cilium, see the `go.mod` and `pkg/k8s/go.mod` for more info. Then dependencies ignore in `.github/renovate.json5` for the replace directive must be updated accordingly. Finally, make sure that k8s dependencies were also bumped along Cilium.',
      ],
    },
    {
      enabled: false,
      matchUpdateTypes: [
        'major',
        'minor',
        'digest',
      ],
      matchPackageNames: [
        '/k8s\\.io/*/',
        '/sigs\\.k8s\\.io/*/',
      ],
    },
  ],
  customManagers: [
    {
      customType: 'regex',
      fileMatch: [
        '^\\.github/workflows/[^/]+\\.ya?ml$',
        '^docs/hugo.toml$',
      ],
      matchStrings: [
        '# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)\\s+.+ [\'"]?(?<currentValue>[^\'"\\s]*)',
      ],
    },
    {
      customType: 'regex',
      fileMatch: [
        'Makefile',
        '^contrib/update-helm-chart.sh$',
      ],
      matchStrings: [
        '# renovate: datasource=(?<datasource>.*?)\\s+.+[[:blank:]]*=[[:blank:]]*(?<depName>.*?):(?<currentValue>[^\\s@]*)@?(?<currentDigest>sha256:[a-f0-9]+)?',
      ],
    },
    {
      customType: 'regex',
      fileMatch: [
        'go\\.mod$',
      ],
      matchStrings: [
        '// renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)\\s+go (?<currentValue>.*)',
      ],
    },
    {
      customType: 'regex',
      fileMatch: [
        '^Dockerfile$',
      ],
      matchStrings: [
        '# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)\\s+&& git clone --depth 1 --branch (?<currentValue>v\\d+\\.\\d+\\.\\d+)',
      ],
    },
  ],
}
