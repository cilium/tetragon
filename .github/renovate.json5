{
  // self-hosted configuration
  "username": "cilium-renovate[bot]",
  "repositories": ["cilium/tetragon"],
  "allowedPostUpgradeCommands": [
    "^/tmp/install-buildx$", 
    "^make codegen$", 
    "^make generate$", 
    "^install/kubernetes/test.sh$"
  ],
  // repository configuration
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "config:recommended",
    ":gitSignOff",
    "helpers:pinGitHubActionDigests"
  ],
  "gitAuthor": "cilium-renovate[bot] <134692979+cilium-renovate[bot]@users.noreply.github.com>",
  "includePaths": [
    ".github/workflows/**",
    "go.mod",
    "go.sum",
    "api/go.mod",
    "api/go.sum",
    "pkg/k8s/go.mod",
    "pkg/k8s/go.sum",
    "Dockerfile*",
    "install/kubernetes/values.yaml",
  ],
  "postUpdateOptions": [
    "gomodTidy"
  ],
  "rebaseWhen": "conflicted",
  "pinDigests": true,
  "separateMajorMinor": true,
  "separateMultipleMajor": true,
  "separateMinorPatch": true,
  "pruneStaleBranches": true,
  "baseBranches": [
    "main"
  ],
  "vulnerabilityAlerts": {
    "enabled": true
  },
  "labels": [
    "kind/enhancement",
    "release-blocker"
  ],
  "schedule": [
    "on monday"
  ],
  // about packageRules: To enable grouping, you configure the groupName field
  // to something non-null.
  "packageRules": [
    {
      "groupName": "all github action dependencies",
      "groupSlug": "all-github-action",
      "matchFileNames": [
        ".github/workflows/**"
      ],
      "matchUpdateTypes": [
        "major",
        "minor",
        "patch",
        "digest",
        "pin",
        "pinDigest"
      ],
      "schedule": [
        "every month"
      ]
    },
    {
      "matchFileNames": [
        ".github/workflows/**"
      ],
      "matchManagers": [
        "github-actions"
      ],
      "separateMinorPatch": false,
    },
    {
      // not grouping Go minor and major updates together
      "matchFileNames": [
        "go.mod",
        "go.sum"
      ],
      "postUpdateOptions": [
        // update source import paths on major updates
        "gomodUpdateImportPaths",
      ],
      postUpgradeTasks: {
        "commands": ["/tmp/install-buildx", "make codegen", "make generate"],
        "fileFilters": ["**/**"],
        "executionMode": "branch"
      },
      "matchUpdateTypes": [
        "major",
        "minor",
      ],
      "matchBaseBranches": [
        "main"
      ],
    },
    {
      "groupName": "all go dependencies main",
      "groupSlug": "all-go-deps-main",
      "matchFileNames": [
        "go.mod",
        "go.sum"
      ],
      "postUpdateOptions": [
        // update source import paths on major updates
        "gomodUpdateImportPaths",
      ],
      "postUpgradeTasks": {
        "commands": ["/tmp/install-buildx", "make codegen", "make generate"],
        "fileFilters": ["**/**"],
        "executionMode": "branch"
      },
      "matchUpdateTypes": [
        "patch",
        "digest",
        "pin",
        "pinDigest"
      ],
      "matchBaseBranches": [
        "main"
      ],
    },
    {
      // grouping these together because the number of dependencies is limited
      "groupName": "all API go dependencies main",
      "groupSlug": "all-api-go-deps-main",
      "matchFileNames": [
        "api/go.mod",
        "api/go.sum"
      ],
      "postUpdateOptions": [
        // update source import paths on major updates
        "gomodUpdateImportPaths",
      ],
      "postUpgradeTasks": {
        "commands": ["/tmp/install-buildx", "make codegen", "make generate"],
        "fileFilters": ["**/**"],
        "executionMode": "branch"
      },
      "matchUpdateTypes": [
        "major",
        "minor",
        "patch",
        "digest",
        "pin",
        "pinDigest"
      ],
      "matchBaseBranches": [
        "main"
      ],
    },
    {
      // not grouping major updates together
      "matchFileNames": [
        "pkg/k8s/go.mod",
        "pkg/k8s/go.sum"
      ],
      "postUpdateOptions": [
        // update source import paths on major updates
        "gomodUpdateImportPaths",
      ],
      "postUpgradeTasks": {
        "commands": ["/tmp/install-buildx", "make codegen", "make generate"],
        "fileFilters": ["**/**"],
        "executionMode": "branch"
      },
      "matchUpdateTypes": [
        "major",
      ],
      "matchBaseBranches": [
        "main"
      ],
    },
    {
      "groupName": "all k8s pkg go dependencies main",
      "groupSlug": "all-k8s-pkg-go-deps-main",
      "matchFileNames": [
        "pkg/k8s/go.mod",
        "pkg/k8s/go.sum"
      ],
      "postUpdateOptions": [
        // update source import paths on major updates
        "gomodUpdateImportPaths",
      ],
      "postUpgradeTasks": {
        "commands": ["/tmp/install-buildx", "make codegen", "make generate"],
        "fileFilters": ["**/**"],
        "executionMode": "branch"
      },
      "matchUpdateTypes": [
        "minor",
        "patch",
        "digest",
        "pin",
        "pinDigest"
      ],
      "matchBaseBranches": [
        "main"
      ],
    },
    {
      "matchPackageNames": [
        "docker.io/library/busybox"
      ],
      "matchFileNames": [
        "Dockerfile"
      ],
    },
    {
      "groupName": "Go",
      "matchDepNames": [
        "go",
        "docker.io/library/golang"
      ],
    },
    {
      // Group golangci-lint updates to overrule grouping of version updates in the GHA files.
      // Without this, golangci-lint updates are not in sync for GHA files and other usages.
      "groupName": "golangci-lint",
      "matchDepNames": [
        "golangci/golangci-lint"
      ]
    },
    {
      "matchFileNames": [
        "install/kubernetes/values.yaml",
      ],
      // lint and generate files for helm chart
      "postUpgradeTasks": {
        "commands": ["install/kubernetes/test.sh"],
        "fileFilters": ["**/**"],
        "executionMode": "branch"
      }
    },
    // ignore deps section
    {
      // do not update those packages as they are replaced by the local copy
      // see https://github.com/cilium/tetragon/blob/7623babdf54e9a38326420c1b188308f6cf96fff/go.mod#L178-L179
      "matchPackageNames": ["github.com/cilium/tetragon/api", "github.com/cilium/tetragon/pkg/k8s", "github.com/cilium/tetragon"],
      "matchManagers": ["gomod"],
      "enabled": false
    },
    {
      // do not update sigstore/cosign-installer as it breaks CI
      "matchPackageNames": ["sigstore/cosign-installer"],
      "matchManagers": ["github-actions"],
      "enabled": false
    },
    {
      // do not update docker.io/library/ubuntu container image in utility images
      "matchPackageNames": ["docker.io/library/ubuntu"],
      "matchManagers": ["dockerfile"],
      "matchFileNames": [
        "Dockerfile.clang",
        "Dockerfile.clang-format"
      ],
      "enabled": false
    }
  ],
  "regexManagers": [
    {
      "fileMatch": [
        "^\\.github/workflows/[^/]+\\.ya?ml$"
      ],
      // This regex manages version strings in GitHub actions workflow files,
      // similar to the examples shown here:
      // https://docs.renovatebot.com/modules/manager/regex/#advanced-capture
      "matchStrings": [
        "# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)\\s+.+version: *['\"]?(?<currentValue>[^'\"\\s]*)"
      ]
    }
  ]
}
