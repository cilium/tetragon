name: Build Clang Image

on:
  push:
    branches:
      - main
      - v*
    paths:
    - 'Dockerfile.clang'
  pull_request:
    paths:
    - 'Dockerfile.clang'

permissions:
  # To be able to access the repository with `actions/checkout`
  contents: read
  # Required to generate OIDC tokens for `sigstore/cosign-installer` authentication
  id-token: write

jobs:
  build-and-push:
    environment: release-clang
    runs-on: ubuntu-20.04

    steps:
      - name: Login to quay.io
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_CLANG_RELEASE_USERNAME }}
          password: ${{ secrets.QUAY_CLANG_RELEASE_PASSWORD }}

      - name: Getting image tag
        id: tag
        run: |
          if [ ${{ github.event.pull_request.head.sha }} != "" ]; then
            echo ::set-output name=tag::${{ github.event.pull_request.head.sha }}
          else
            echo ::set-output name=tag::${{ github.sha }}
          fi

      - name: Checkout Source Code
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Release Build clang
        uses: docker/build-push-action@c56af957549030174b10d6867f20e78cfd7debc5
        id: docker_build_release
        with:
          context: .
          file: ./Dockerfile.clang
          push: true
          platforms: linux/amd64
          tags: |
            quay.io/${{ github.repository_owner }}/clang:${{ steps.tag.outputs.tag }}

      - name: Install Cosign
        uses: sigstore/cosign-installer@9becc617647dfa20ae7b1151972e9b3a2c338a2b

      - name: Sign Container Image
        if: ${{ steps.tag-in-repositories.outputs.exists == 'false' }}
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: |
          cosign sign quay.io/${{ github.repository_owner }}/clang@${{ steps.docker_build_release.outputs.digest }}

      - name: Image Release Digest
        shell: bash
        run: |
          mkdir -p image-digest/
          job_name=clang
          job_name_capital=${job_name^^}
          job_name_underscored=${job_name_capital//-/_}
          echo "${job_name_underscored}_DIGEST := \"${{ steps.docker_build_release.outputs.digest }}\"" > image-digest/makefile-digest.txt

          echo "### clang" > image-digest/clang.txt
          echo "" >> image-digest/clang.txt
          echo "\`quay.io/${{ github.repository_owner }}/clang:${{ steps.tag.outputs.tag }}@${{ steps.docker_build_release.outputs.digest }}\`" >> image-digest/clang.txt
          echo "" >> image-digest/clang.txt

      # Upload artifact digests
      - name: Upload artifact digests
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8
        with:
          name: image-digest clang
          path: image-digest
          retention-days: 1

  image-digests:
    if: ${{ github.repository == 'cilium/tetragon' }}
    name: Display Digests
    runs-on: ubuntu-20.04
    needs: build-and-push
    steps:
      - name: Downloading Image Digests
        shell: bash
        run: |
          mkdir -p image-digest/

      - name: Download digests of all images built
        uses: actions/download-artifact@9782bd6a9848b53b110e712e20e42d89988822b7
        with:
          path: image-digest/

      - name: Image Digests Output
        shell: bash
        run: |
          cd image-digest/
          find -type f | sort | xargs -d '\n' cat

