name: Image CI Build

on:
  pull_request_target:
    types:
      - opened
      - synchronize
      - reopened
  push:
    branches:
      - main

permissions:
  # To be able to access the repository with `actions/checkout`
  contents: read
  # Required to generate OIDC tokens for `sigstore/cosign-installer` authentication
  id-token: write

jobs:
  build-and-push-prs:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        include:
          - name: tetragon
            dockerfile: ./Dockerfile

          - name: tetragon-operator
            dockerfile: ./operator.Dockerfile

    steps:
      - name: Login to quay.io for CI
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME_CI }}
          password: ${{ secrets.QUAY_PASSWORD_CI }}

      - name: Getting image tag
        id: tag
        run: |
          if [ ${{ github.event.pull_request.head.sha }} != "" ]; then
            echo ::set-output name=tag::${{ github.event.pull_request.head.sha }}
          else
            echo ::set-output name=tag::${{ github.sha }}
          fi

      - name: Checkout Source Code
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b
        with:
          persist-credentials: false
          ref: ${{ steps.tag.outputs.tag }}
          fetch-depth: 0

      - name: Get version
        run: |
          echo "TETRAGON_VERSION=$(make version)" >> $GITHUB_ENV

      - name: Install Cosign
        uses: sigstore/cosign-installer@9becc617647dfa20ae7b1151972e9b3a2c338a2b

      # main branch pushes
      - name: CI Build (main)
        if: ${{ github.event_name != 'pull_request_target' }}
        uses: docker/build-push-action@c56af957549030174b10d6867f20e78cfd7debc5
        id: docker_build_ci_main
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          platforms: linux/amd64
          build-args: |
            TETRAGON_VERSION=${{ env.TETRAGON_VERSION }}
          tags: |
            quay.io/${{ github.repository_owner }}/${{ matrix.name }}-ci:${{ steps.tag.outputs.tag }}
            quay.io/${{ github.repository_owner }}/${{ matrix.name }}-ci:latest

      - name: Sign Container Image
        if: ${{ github.event_name != 'pull_request_target' }}
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: |
          cosign sign quay.io/${{ github.repository_owner }}/${{ matrix.name }}-ci@${{ steps.docker_build_ci_main.outputs.digest }}

      - name: CI Image Releases digests (main)
        if: ${{ github.event_name != 'pull_request_target' }}
        shell: bash
        run: |
          mkdir -p image-digest/
          echo "quay.io/${{ github.repository_owner }}/${{ matrix.name }}-ci:${{ steps.tag.outputs.tag }}@${{ steps.docker_build_ci_main.outputs.digest }}" >> image-digest/${{ matrix.name }}.txt

      # PR updates
      - name: CI Build (PR)
        if: ${{ github.event_name == 'pull_request_target' }}
        uses: docker/build-push-action@c56af957549030174b10d6867f20e78cfd7debc5
        id: docker_build_ci_pr
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          platforms: linux/amd64
          build-args: |
            TETRAGON_VERSION=${{ env.TETRAGON_VERSION }}
          tags: |
            quay.io/${{ github.repository_owner }}/${{ matrix.name }}-ci:${{ steps.tag.outputs.tag }}

      - name: Sign Container Image
        if: ${{ github.event_name == 'pull_request_target' }}
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: |
          cosign sign quay.io/${{ github.repository_owner }}/${{ matrix.name }}-ci@${{ steps.docker_build_ci_pr.outputs.digest }}

      - name: CI Image Releases digests (PR)
        if: ${{ github.event_name == 'pull_request_target' }}
        shell: bash
        run: |
          mkdir -p image-digest/
          echo "quay.io/${{ github.repository_owner }}/${{ matrix.name }}-ci:${{ steps.tag.outputs.tag }}@${{ steps.docker_build_ci_pr.outputs.digest }}" >> image-digest/${{ matrix.name }}.txt

      # Upload artifact digests
      - name: Upload artifact digests
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8
        with:
          name: image-digest ${{ matrix.name }}
          path: image-digest
          retention-days: 1

  image-digests:
    if: ${{ always() }}
    name: Display Digests
    runs-on: ubuntu-20.04
    needs: [build-and-push-prs]
    steps:
      - name: Downloading Image Digests
        shell: bash
        run: |
          mkdir -p image-digest/

      - name: Download digests of all images built
        uses: actions/download-artifact@9782bd6a9848b53b110e712e20e42d89988822b7
        with:
          path: image-digest/

      - name: Image Digests Output
        shell: bash
        run: |
          cd image-digest/
          find -type f | sort | xargs -d '\n' cat
