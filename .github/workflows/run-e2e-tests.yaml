name: Tetragon e2e Test
on:
  pull_request:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  clusterName: tetragon-ci
  ciliumCliVersion: v0.11.11

jobs:
  e2e-test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 40
    strategy:
      matrix:
        os: [ ubuntu-20.04 ]
    steps:
    - name: Install Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.18.3'

    - name: Checkout Code
      uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      with:
        path: go/src/github.com/cilium/tetragon/

    - name: Set Up Job Variables
      id: vars
      run: |
        if [ ${{ github.event.issue.pull_request || github.event.pull_request }} ]; then
          PR_API_JSON=$(curl \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            ${{ github.event.issue.pull_request.url || github.event.pull_request.url }})
          SHA=$(echo "$PR_API_JSON" | jq -r ".head.sha")
        else
          SHA=${{ github.sha }}
        fi
        echo ::set-output name=sha::${SHA}
        echo ::set-output name=agentImage::quay.io/cilium/tetragon-ci:${SHA}
        echo ::set-output name=operatorImage::quay.io/cilium/tetragon-operator-ci:${SHA}

    - name: Pull Tetragon Images
      uses: nick-invision/retry@v2
      with:
        timeout_minutes: 2
        max_attempts: 30
        retry_wait_seconds: 30
        command: |
          set -e
          docker pull ${{ steps.vars.outputs.agentImage }}
          docker pull ${{ steps.vars.outputs.operatorImage }}

    - name: Install Kubectl
      run: |
        TEMP="$(mktemp -d)"
        pushd "$TEMP"
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        curl -LO "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
        echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check
        sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
        popd
        rm -rf "$TEMP"

    - name: Install Kind
      run: |
        TEMP="$(mktemp -d)"
        pushd "$TEMP"
        curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.14.0/kind-linux-amd64
        sudo install -o root -g root -m 0755 ./kind /usr/local/bin/kind
        popd
        rm -rf "$TEMP"

    - name: Install Cilium CLI
      run: |
        TEMP="$(mktemp -d)"
        pushd "$TEMP"
        curl -sSL --remote-name-all https://github.com/cilium/cilium-cli/releases/download/${{ env.ciliumCliVersion }}/cilium-linux-amd64.tar.gz{,.sha256sum}
        sha256sum --check cilium-linux-amd64.tar.gz.sha256sum
        sudo tar xzvfC cilium-linux-amd64.tar.gz /usr/local/bin
        popd
        rm -rf "$TEMP"
        cilium version

    - name: Create KinD Cluster
      run: |
        kind create cluster --name ${{ env.clusterName }}
        kind load docker-image --name ${{ env.clusterName }} ${{ steps.vars.outputs.agentImage }}
        kind load docker-image --name ${{ env.clusterName }} ${{ steps.vars.outputs.operatorImage }}
        cilium install

    - name: Run e2e Tests
      run: |
        cd go/src/github.com/cilium/tetragon

        go test -p 1 -parallel 1 -timeout 20m -failfast -cover ./tests/e2e/tests/... \
          -tetragon.helm.set=tetragon.image.override=${{ steps.vars.outputs.agentImage }} \
          -tetragon.helm.set=tetragonOperator.image.override=${{ steps.vars.outputs.operatorImage }} \
          -tetragon.helm.url="" \
          -tetragon.helm.chart="$(realpath ./install/kubernetes)" \
          -tetragon.install-cilium=false \
          -cluster-name=${{ env.clusterName }} \
          -kubeconfig ~/.kube/config \
          -args -v=4

    - name: Upload Tetragon Logs
      if: failure()
      uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8
      with:
        name: tetragon-logs
        path: /tmp/tetragon.gotest*
        retention-days: 5
