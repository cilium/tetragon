# SPDX-License-Identifier: Apache-2.0
# Copyright Authors of Tetragon

GO_BUILD = CGO_ENABLED=0 $(GO) build
TARGET=tetra

RELEASE_UID ?= $(shell id -u)
RELEASE_GID ?= $(shell id -g)

cli-release:
	docker run \
		--rm \
		--workdir /tetragon \
		--volume `pwd`:/tetragon docker.io/library/golang:1.19.0-alpine3.16 \
		sh -c "apk add --no-cache make git && \
			addgroup -g $(RELEASE_GID) release && \
			adduser -u $(RELEASE_UID) -D -G release release && \
			su release -c 'make cli-local-release VERSION=${VERSION}'"

# TODO: Build darwin / windows / linux arm64 binaries
cli-local-release: cli-clean
	set -o errexit; \
	for OS in linux; do \
		EXT=; \
		ARCHS=; \
		case $$OS in \
			linux) \
				ARCHS='amd64'; \
				;; \
		esac; \
		for ARCH in $$ARCHS; do \
			echo Building release binary for $$OS/$$ARCH...; \
			test -d release/$$OS/$$ARCH|| mkdir -p release/$$OS/$$ARCH; \
			env GOOS=$$OS GOARCH=$$ARCH $(GO_BUILD) -ldflags=$(GO_LDFLAGS) -o release/$$OS/$$ARCH/$(TARGET)$$EXT ./cmd/tetra; \
			tar -czf release/$(TARGET)-$$OS-$$ARCH.tar.gz -C release/$$OS/$$ARCH $(TARGET)$$EXT; \
			(cd release && sha256sum $(TARGET)-$$OS-$$ARCH.tar.gz > $(TARGET)-$$OS-$$ARCH.tar.gz.sha256sum); \
		done; \
		rm -r release/$$OS; \
	done; \

cli-clean:
	rm -rf ./release

.PHONY: cli-release cli-local-release
