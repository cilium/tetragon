// SPDX-License-Identifier: Apache-2.0
// Copyright Authors of Tetragon

// Code generated by protoc-gen-go-tetragon. DO NOT EDIT

package filters

import (
	fmt "fmt"
	fgs "github.com/cilium/tetragon/api/v1/fgs"
	reflect "reflect"
)

func OpCodeForEventType(eventType fgs.EventType) (reflect.Type, error) {
	var opCode reflect.Type
	switch eventType {
	case fgs.EventType_PROCESS_EXEC:
		opCode = reflect.TypeOf(&fgs.GetEventsResponse_ProcessExec{})
	case fgs.EventType_PROCESS_EXIT:
		opCode = reflect.TypeOf(&fgs.GetEventsResponse_ProcessExit{})
	case fgs.EventType_PROCESS_KPROBE:
		opCode = reflect.TypeOf(&fgs.GetEventsResponse_ProcessKprobe{})
	case fgs.EventType_PROCESS_TRACEPOINT:
		opCode = reflect.TypeOf(&fgs.GetEventsResponse_ProcessTracepoint{})
	case fgs.EventType_PROCESS_DNS:
		opCode = reflect.TypeOf(&fgs.GetEventsResponse_ProcessDns{})
	case fgs.EventType_TEST:
		opCode = reflect.TypeOf(&fgs.GetEventsResponse_Test{})
	default:
		return nil, fmt.Errorf("Unknown EventType %s", eventType)
	}
	return opCode, nil
}
