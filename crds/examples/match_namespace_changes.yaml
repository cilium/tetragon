# This comment describes a demo of matchNamespaceChanges. We need 2 terminals
# here. The first one will run tetragon and the second will run the commands
# that we want to capture. First step is to replace {{.Pid}} in this file with
# the PID of the bash running on the second terminal.
#
# (1) The first scenario is to run a command in a less priviledged mount
#     namespace.
#
# Terminal 1:
# $ rm -f events.json
# $ ./tetragon --btf /sys/kernel/btf/vmlinux  --bpf-lib ./bpf/objs/ --export-filename events.json --enable-process-ns --config-file crds/examples/match_namespace_changes.yaml
# $ # <wait for events>
# $ # kill tetragon
# $ grep kprobe events.json | grep \"__x64_sys_write\" | grep strange | jq . # get the write kprobe events
#
# Terminal 2:
# $ sudo unshare --mount python3 -c "with open('./strange.txt', 'w') as f: f.write('testdata')"
#
# We will see a single kprobe event running in the new mnt namespace. The
# reason we see that is that we start from the mnt host namespace and we
# run this command to another mnt namespace.
#
# (2) The second scenario is to run a command in a more priviledged mount
#     namespace (i.e. the host mnt namespace).
#
# Terminal 1:
# $ rm -f events.json
# $ ./tetragon --btf /sys/kernel/btf/vmlinux  --bpf-lib ./bpf/objs/ --export-filename events.json --enable-process-ns --config-file crds/examples/match_namespace_changes.yaml
# $ # <wait for events>
# $ # kill tetragon
# $ grep kprobe events.json | grep \"__x64_sys_write\" | grep strange | jq . # get the write kprobe events
#
# Terminal 2:
# $ sudo unshare --mount # move out from host mnt namespace
# $ nsenter --target 1 --mount python3 -c "with open('./strange.txt', 'w') as f: f.write('testdata')" # execute a write in the host mnt namespace
#
# We will see a single kprobe event running in the host mnt namespace (while
# we are in a non-host namespace). The reason we see that is that we  start
# from a non-host mnt namespace.
#
apiVersion: cilium.io/v1alpha1
kind: TracingPolicy
metadata:
  name: "fd_install"
spec:
  kprobes:
  - call: "fd_install"
    syscall: false
    return: false
    args:
    - index: 0
      type: int
    - index: 1
      type: "file"
    selectors:
    - matchPIDs:
      - operator: In
        followForks: true
        isNamespacePID: false
        values:
        - {{.Pid}}
      matchArgs:
      - index: 1
        operator: "Postfix"
        values:
        - "strange.txt"
      matchActions:
      - action: FollowFD
        argFd: 0
        argName: 1
  - call: "__x64_sys_write"
    syscall: true
    args:
    - index: 0
      type: "fd"
    - index: 1
      type: "char_buf"
      returnCopy: true
    - index: 2
      type: "size_t"
    selectors:
    - matchPIDs:
      - operator: In
        followForks: true
        isNamespacePID: false
        values:
        - {{.Pid}}
      matchNamespaces:
      - namespace: Mnt
        operator: In
        values:
        - "4026532288"
        - "4026531840"
      matchNamespaceChanges:
      - operator: In
        values:
        - "Mnt"
      matchArgs:
      - index: 0
        operator: "Postfix"
        values:
        - "strange.txt"
