# Tetragon Control Resources Usage

[Service]
# Specify the throttling limit on memory usage of the executed processes
# in this unit. Memory usage may go above the limit if unavoidable, but
# the processes are heavily slowed down and memory is taken away
# aggressively in such cases. This is the main mechanism to control
# memory usage of a unit.
# Takes a memory size in bytes. If the value is suffixed with K, M, G or T,
# the specified memory size is parsed as Kilobytes, Megabytes, Gigabytes,
# or Terabytes (with the base 1024), respectively. Alternatively,
# a percentage value may be specified, which is taken relative to the
# installed physical memory on the system. If assigned the special value
# "infinity", no memory throttling is applied. This controls the
# "memory.high" control group attribute.
MemoryHigh=
StartupMemoryHigh=

# Specify the absolute limit on memory usage of Tetragon.
# If memory usage cannot be contained under the limit,
# out-of-memory killer is invoked inside the unit and
# Tetragon is terminated.
# Takes a memory size in bytes. If the value is suffixed with K, M, G or T,
# the specified memory size is parsed as Kilobytes, Megabytes, Gigabytes,
# or Terabytes (with the base 1024), respectively. Alternatively,
# a percentage value may be specified, which is taken relative to the
# installed physical memory on the system. If assigned the special value
# "infinity", no memory limit is applied. This controls the "memory.max"
# control group attribute.
MemoryMax=


# Assign the specified CPU time weight to the processes executed,
# if the unified control group hierarchy is used on the system.
# These options control the "cpu.weight" control group attribute.
# The allowed range is 1 to 10000. The kernel default is 100.
#
# The available CPU time is split up among all units within one
# slice relative to their CPU time weight. A higher weight means
# more CPU time, a lower weight means less.
#
# While StartupCPUWeight= applies to the startup and shutdown
# phases of the system, CPUWeight= applies to normal runtime of
# the system, and if the former is not set also to the startup
# and shutdown phases. Using StartupCPUWeight= allows prioritizing
# specific services at boot-up and shutdown differently than
# during normal runtime.
CPUWeight=100
StartupCPUWeight=100


# This setting controls the cpu controller in the unified hierarchy.
# Assign the specified CPU time quota to the processes executed.
# Takes a percentage value, suffixed with "%". The percentage
# specifies how much CPU time the unit shall get at maximum,
# relative to the total CPU time available on one CPU. Use values > 100%
# for allotting CPU time on more than one CPU. This controls the
# "cpu.max" attribute on the unified control group hierarchy and
# "cpu.cfs_quota_us" on legacy. For details about these control group
# attributes, see Control Groups v2 and CFS Bandwidth Control.
# Setting CPUQuota= to an empty value unsets the quota.
CPUQuota=

# This setting controls the cpu controller in the unified hierarchy.
# Assign the duration over which the CPU time quota specified by
# CPUQuota= is measured. Takes a time duration value in seconds,
# with an optional suffix such as "ms" for milliseconds (or "s" for seconds.)
# The default setting is 100ms. The period is clamped to the range
# supported by the kernel, which is [1ms, 1000ms]. Additionally,
# the period is adjusted up so that the quota interval is also at
# least 1ms. Setting CPUQuotaPeriodSec= to an empty value resets it
# to the default.
CPUQuotaPeriodSec=100ms

