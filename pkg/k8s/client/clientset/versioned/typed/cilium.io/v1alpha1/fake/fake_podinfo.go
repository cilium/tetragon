// SPDX-License-Identifier: Apache-2.0
// Copyright Authors of Tetragon

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1alpha1 "github.com/cilium/tetragon/pkg/k8s/apis/cilium.io/v1alpha1"
	ciliumiov1alpha1 "github.com/cilium/tetragon/pkg/k8s/client/clientset/versioned/typed/cilium.io/v1alpha1"
	gentype "k8s.io/client-go/gentype"
)

// fakePodInfo implements PodInfoInterface
type fakePodInfo struct {
	*gentype.FakeClientWithList[*v1alpha1.PodInfo, *v1alpha1.PodInfoList]
	Fake *FakeCiliumV1alpha1
}

func newFakePodInfo(fake *FakeCiliumV1alpha1, namespace string) ciliumiov1alpha1.PodInfoInterface {
	return &fakePodInfo{
		gentype.NewFakeClientWithList[*v1alpha1.PodInfo, *v1alpha1.PodInfoList](
			fake.Fake,
			namespace,
			v1alpha1.SchemeGroupVersion.WithResource("podinfo"),
			v1alpha1.SchemeGroupVersion.WithKind("PodInfo"),
			func() *v1alpha1.PodInfo { return &v1alpha1.PodInfo{} },
			func() *v1alpha1.PodInfoList { return &v1alpha1.PodInfoList{} },
			func(dst, src *v1alpha1.PodInfoList) { dst.ListMeta = src.ListMeta },
			func(list *v1alpha1.PodInfoList) []*v1alpha1.PodInfo { return gentype.ToPointerSlice(list.Items) },
			func(list *v1alpha1.PodInfoList, items []*v1alpha1.PodInfo) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
