// SPDX-License-Identifier: Apache-2.0
// Copyright Authors of Tetragon

// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	"context"

	v1alpha1 "github.com/cilium/tetragon/pkg/k8s/apis/cilium.io/v1alpha1"
	scheme "github.com/cilium/tetragon/pkg/k8s/client/clientset/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// TracingPoliciesNamespacedGetter has a method to return a TracingPolicyNamespacedInterface.
// A group's client should implement this interface.
type TracingPoliciesNamespacedGetter interface {
	TracingPoliciesNamespaced(namespace string) TracingPolicyNamespacedInterface
}

// TracingPolicyNamespacedInterface has methods to work with TracingPolicyNamespaced resources.
type TracingPolicyNamespacedInterface interface {
	Create(ctx context.Context, tracingPolicyNamespaced *v1alpha1.TracingPolicyNamespaced, opts v1.CreateOptions) (*v1alpha1.TracingPolicyNamespaced, error)
	Update(ctx context.Context, tracingPolicyNamespaced *v1alpha1.TracingPolicyNamespaced, opts v1.UpdateOptions) (*v1alpha1.TracingPolicyNamespaced, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*v1alpha1.TracingPolicyNamespaced, error)
	List(ctx context.Context, opts v1.ListOptions) (*v1alpha1.TracingPolicyNamespacedList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *v1alpha1.TracingPolicyNamespaced, err error)
	TracingPolicyNamespacedExpansion
}

// tracingPoliciesNamespaced implements TracingPolicyNamespacedInterface
type tracingPoliciesNamespaced struct {
	*gentype.ClientWithList[*v1alpha1.TracingPolicyNamespaced, *v1alpha1.TracingPolicyNamespacedList]
}

// newTracingPoliciesNamespaced returns a TracingPoliciesNamespaced
func newTracingPoliciesNamespaced(c *CiliumV1alpha1Client, namespace string) *tracingPoliciesNamespaced {
	return &tracingPoliciesNamespaced{
		gentype.NewClientWithList[*v1alpha1.TracingPolicyNamespaced, *v1alpha1.TracingPolicyNamespacedList](
			"tracingpoliciesnamespaced",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *v1alpha1.TracingPolicyNamespaced { return &v1alpha1.TracingPolicyNamespaced{} },
			func() *v1alpha1.TracingPolicyNamespacedList { return &v1alpha1.TracingPolicyNamespacedList{} }),
	}
}
